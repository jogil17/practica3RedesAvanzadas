apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
        - name: wait-for-redis
          image: busybox
          command: ['sh', '-c', 'until nc -z redis-service 6379; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: app
        image: mi_app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: database_url
        - name: CACHE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: cache_url
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 15  # Tiempo para esperar antes de la primera comprobaci칩n
          timeoutSeconds: 5        # Tiempo m치ximo para que la sonda reciba una respuesta
          periodSeconds: 10        # Intervalo entre comprobaciones
          failureThreshold: 5      # Intentos fallidos antes de reiniciar el contenedor
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 15  # Tiempo antes de que la primera comprobaci칩n de disponibilidad ocurra
          timeoutSeconds: 5        # Tiempo m치ximo para esperar la respuesta
          periodSeconds: 10        # Intervalo entre comprobaciones
          failureThreshold: 5      # Intentos fallidos antes de marcarlo como no disponible
